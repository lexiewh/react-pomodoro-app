{"version":3,"sources":["assets/logo.png","assets/alert.mp3","components/Form/useForm.js","components/Form/FormRules.js","components/Form/TimeForm.js","components/Timer.js","index.js","components/App.js"],"names":["module","exports","useForm","callback","validate","useState","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","prodTime","shortBreak","longBreak","interval","withRouter","history","useHistory","console","log","push","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","className","Image","src","logo","Form","onSubmit","Segment","stacked","Field","Input","fluid","icon","iconPosition","placeholder","onChange","Label","pointing","prompt","type","Popup","trigger","content","position","Button","size","alert","UIfx","alertAudio","Timer","props","state","prod","Number","match","params","productiveTime","short","long","seconds","session","isRunning","format","bind","startTimer","stopTimer","sessionSwitch","getSessionMinutes","resetSessionMinutes","subtractInterval","intervalText","resetTimer","time","toString","this","myInterval","setInterval","setState","minutes","play","clearInterval","Group","onClick","React","Component","ReactDOM","render","basename","exact","path","component","TimeForm","document","getElementById"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,qSCmC5BC,EAjCC,SAACC,EAAUC,GAAc,IAAD,EACVC,mBAAS,IADC,mBAC/BC,EAD+B,KACvBC,EADuB,OAEVF,mBAAS,IAFC,mBAE/BG,EAF+B,KAEvBC,EAFuB,OAGEJ,oBAAS,GAHX,mBAG/BK,EAH+B,KAGjBC,EAHiB,KAKtCC,qBAAU,WAC2B,IAA/BC,OAAOC,KAAKN,GAAQO,QAAgBL,GACtCP,MAED,CAACA,EAAUK,EAAQE,IAgBtB,MAAO,CACLJ,SACAU,aAVmB,SAACC,GACpBA,EAAMC,UACNX,GAAU,SAAAD,GAAM,sBACXA,EADW,eAEbW,EAAME,OAAOC,KAAOH,EAAME,OAAOE,YAOpCC,aAjBmB,SAACL,GAChBA,GAAOA,EAAMM,iBACjBZ,GAAgB,GAChBF,EAAUL,EAASE,KAenBE,WC/BW,SAASJ,EAASE,GAC/B,IAAIE,EAAS,GAkCb,OAhCKF,EAAOkB,SAEDlB,EAAOkB,UAAY,EAC5BhB,EAAOgB,SAAW,6CACTlB,EAAOkB,UAAY,MAC5BhB,EAAOgB,SAAW,qDAJlBhB,EAAOgB,SAAW,8BAOflB,EAAOmB,WAEDnB,EAAOmB,YAAc,EAC9BjB,EAAOiB,WAAa,mCACXnB,EAAOmB,YAAc,KAC9BjB,EAAOiB,WAAa,qCAJpBjB,EAAOiB,WAAa,+BAOjBnB,EAAOoB,UAEDpB,EAAOoB,WAAa,EAC7BlB,EAAOkB,UAAY,mCACVpB,EAAOoB,WAAa,KAC7BlB,EAAOiB,WAAa,qCAJpBjB,EAAOkB,UAAY,8BAOhBpB,EAAOqB,SAEDrB,EAAOqB,UAAY,EAC5BnB,EAAOmB,SAAW,yCACTrB,EAAOqB,UAAY,KAC5BnB,EAAOmB,SAAW,kCAJlBnB,EAAOmB,SAAW,uBAObnB,EC2EMoB,mBAtGf,WACE,IAAMC,EAAUC,cADE,EAOd5B,GAEJ,WACE6B,QAAQC,IAAI1B,GACZuB,EAAQI,KAAR,iBAAuB3B,EAAOkB,SAA9B,YAA0ClB,EAAOmB,WAAjD,YAA+DnB,EAAOoB,UAAtE,YAAmFpB,EAAOqB,aAJxEvB,GAJlBE,EAHgB,EAGhBA,OACAU,EAJgB,EAIhBA,aACAM,EALgB,EAKhBA,aACAd,EANgB,EAMhBA,OAQF,OACE,kBAAC0B,EAAA,EAAD,CAAMC,UAAU,SAASC,MAAO,CAAEC,OAAQ,SAAWC,cAAc,UACjE,kBAACJ,EAAA,EAAKK,OAAN,CAAaH,MAAO,CAAEI,SAAU,MAC9B,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKP,UAAU,SAASQ,UAAU,QAC3C,kBAACC,EAAA,EAAD,CAAOC,IAAKC,MADd,6BAGA,kBAACC,EAAA,EAAD,CAAMC,SAAU1B,GACd,kBAAC2B,EAAA,EAAD,CAASC,SAAO,GAEd,kBAACH,EAAA,EAAKI,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,4BACZpC,KAAK,WACLC,MAAOf,EAAOkB,UAAY,GAC1BiC,SAAUzC,IAEXR,EAAOgB,UACN,kBAACkC,EAAA,EAAD,CAAOC,UAAQ,EAACC,QAAM,GAAEpD,EAAOgB,WAInC,kBAACuB,EAAA,EAAKI,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,OACLO,KAAK,SACLN,aAAa,OACbnC,KAAK,aACLC,MAAOf,EAAOmB,YAAc,GAC5BgC,SAAUzC,EACVwC,YAAY,0BAEbhD,EAAOiB,YACN,kBAACiC,EAAA,EAAD,CAAOC,UAAQ,EAACC,QAAM,GAAEpD,EAAOiB,aAInC,kBAACsB,EAAA,EAAKI,MAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,CACEC,OAAK,EACLC,KAAK,OACLO,KAAK,SACLN,aAAa,OACbnC,KAAK,YACLC,MAAOf,EAAOoB,WAAa,GAC3B+B,SAAUzC,EACVwC,YAAY,yBAEbhD,EAAOkB,WACN,kBAACgC,EAAA,EAAD,CAAOC,UAAQ,EAACC,QAAM,GAAEpD,EAAOkB,YAInC,kBAACoC,EAAA,EAAD,CACEC,QACE,kBAAChB,EAAA,EAAKI,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,OACLO,KAAK,SACLN,aAAa,OACbnC,KAAK,WACLC,MAAOf,EAAOqB,UAAY,GAC1B8B,SAAUzC,EACVwC,YAAY,aAEbhD,EAAOmB,UACN,kBAAC+B,EAAA,EAAD,CAAOC,UAAQ,EAACC,QAAM,GAAEpD,EAAOmB,WAIrCqC,QAAQ,wFACRC,SAAS,iBAGX,kBAACC,EAAA,EAAD,CAAQb,OAAK,EAACc,KAAK,QAAQN,KAAK,SAASlB,UAAU,OAAnD,iB,oFC/FNyB,EAAQ,IAAIC,IAAKC,KAEFC,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,KAAMC,OAAO,EAAKH,MAAMI,MAAMC,OAAOC,gBACrCC,MAAOJ,OAAO,EAAKH,MAAMI,MAAMC,OAAOpD,YACtCuD,KAAML,OAAO,EAAKH,MAAMI,MAAMC,OAAOnD,WACrCuD,QAAS,EACTC,QAAS,mBACTvD,SAAUgD,OAAO,EAAKH,MAAMI,MAAMC,OAAOlD,UACzCwD,WAAW,GAGb,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBACjB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,kBAAoB,EAAKA,kBAAkBJ,KAAvB,gBACzB,EAAKK,oBAAsB,EAAKA,oBAAoBL,KAAzB,gBAC3B,EAAKM,iBAAmB,EAAKA,iBAAiBN,KAAtB,gBACxB,EAAKO,aAAe,EAAKA,aAAaP,KAAlB,gBACpB,EAAKQ,WAAa,EAAKA,WAAWR,KAAhB,gBArBD,E,oEAwBZS,GAEL,OADYA,EAAKC,WAAWhF,OAAS,EAAI,IAAM+E,EAAKC,WAAaD,I,mCAIrD,IAAD,OACPE,KAAKvB,MAAMU,YACfa,KAAKC,WAAaC,aAAY,WAC5B,EAAKC,SAAS,CAAChB,WAAW,IADQ,MAEL,EAAKV,MAA1BQ,EAF0B,EAE1BA,QAASC,EAFiB,EAEjBA,QACbkB,EAAU,EAAKX,oBAEfR,EAAU,GACZ,EAAKkB,UAAS,kBAAkB,CAC9BlB,QADY,EAAGA,QACI,MAGP,IAAZA,IACc,IAAZmB,GACF,EAAKV,sBACL,EAAKF,gBACLpB,EAAMiC,SAEU,qBAAZnB,GACF,EAAKiB,SAAS,CACZzB,KAAM,EAAKD,MAAMC,KAAO,EACxBO,QAAS,KAGG,gBAAZC,GACF,EAAKiB,SAAS,CACZpB,MAAO,EAAKN,MAAMM,MAAQ,EAC1BE,QAAS,KAGG,eAAZC,GACF,EAAKiB,SAAS,CACZnB,KAAM,EAAKP,MAAMO,KAAO,EACxBC,QAAS,SAKhB,Q,kCAIAe,KAAKvB,MAAMU,YAChBa,KAAKG,SAAS,CAAChB,WAAW,IAC1BmB,cAAcN,KAAKC,e,mCAInBD,KAAKT,YACLS,KAAKN,sBACLM,KAAKG,SAAS,CACZjB,QAAS,mBACTD,QAAS,M,0CAIQ,IAAD,EACqBe,KAAKvB,MAApCS,EADU,EACVA,QAASR,EADC,EACDA,KAAMM,EADL,EACKA,KAAMD,EADX,EACWA,MAC7B,MAAgB,qBAAZG,EACKR,EAEO,gBAAZQ,EACKH,EAEO,eAAZG,EACKF,OADT,I,4CAKqB,IACbE,EAAYc,KAAKvB,MAAjBS,QAEQ,qBAAZA,GACFc,KAAKG,SAAS,CAACzB,KAAMC,OAAOqB,KAAKxB,MAAMI,MAAMC,OAAOC,kBAEtC,gBAAZI,GACFc,KAAKG,SAAS,CAACpB,MAAOJ,OAAOqB,KAAKxB,MAAMI,MAAMC,OAAOpD,cAEvC,eAAZyD,GACFc,KAAKG,SAAS,CAACnB,KAAML,OAAOqB,KAAKxB,MAAMI,MAAMC,OAAOnD,e,sCAIrC,IAAD,EACgBsE,KAAKvB,MAA3BS,EADM,EACNA,QAASvD,EADH,EACGA,SACD,qBAAZuD,GAAkCvD,EAAW,GAC/CqE,KAAKG,SAAS,CAAEjB,QAAS,gBAEX,qBAAZA,GAA+C,IAAbvD,GACpCqE,KAAKG,SAAS,CACZxE,SAAU,EACVuD,QAAS,eAGG,gBAAZA,IACFc,KAAKG,SAAS,CAAEjB,QAAS,qBACzBc,KAAKL,oBAES,eAAZT,GACFc,KAAKG,SAAS,CAAEjB,QAAS,uB,yCAKvBc,KAAKvB,MAAM9C,SAAW,EACxBqE,KAAKG,SAAS,CAACxE,SAAUqE,KAAKvB,MAAM9C,SAAW,IAG/CqE,KAAKG,SAAS,CAACxE,SAAUgD,OAAOqB,KAAKxB,MAAMI,MAAMC,OAAOlD,c,qCAK1D,OAA4B,IAAxBqE,KAAKvB,MAAM9C,SAEX,uCAAaqE,KAAKvB,MAAM9C,SAAxB,oCAIA,uCAAaqE,KAAKvB,MAAM9C,SAAxB,uC,+BAOJ,OACE,kBAACO,EAAA,EAAD,CAAMC,UAAU,SAASC,MAAO,CAAEC,OAAQ,SAAWC,cAAc,UACjE,kBAACJ,EAAA,EAAKK,OAAN,CAAaH,MAAO,CAAEI,SAAU,KAAOG,UAAU,aACjD,kBAACF,EAAA,EAAD,CAAQC,GAAG,KAAKP,UAAU,SAASQ,UAAU,gBAC1CqD,KAAKvB,MAAMS,SAGbc,KAAKJ,eAEN,uBAAGjD,UAAU,WAAWqD,KAAKP,oBAA7B,KACA,uBAAG9C,UAAU,WAAWqD,KAAKZ,OAAOY,KAAKvB,MAAMQ,UAE/C,kBAACf,EAAA,EAAOqC,MAAR,CAAcpC,KAAK,SACjB,kBAACD,EAAA,EAAD,CAAQsC,QAASR,KAAKV,YAAtB,SACA,kBAACpB,EAAA,EAAD,CAAQsC,QAASR,KAAKT,WAAtB,QACA,kBAACrB,EAAA,EAAD,CAAQsC,QAASR,KAAKH,YAAtB,gB,GA3KyBY,IAAMC,WCCzCC,IAASC,OAAO,mBCHD,WACb,OACE,kBAAC,IAAD,CAAYC,SAAS,KACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CACEF,KAAK,0DACLC,UAAWzC,QDJP,MAAS2C,SAASC,eAAe,W","file":"static/js/main.91bb0aa5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c2b885cd.png\";","module.exports = __webpack_public_path__ + \"static/media/alert.ae1577e8.mp3\";","import { useState, useEffect } from 'react'\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({})\n  const [errors, setErrors] = useState({})\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback()\n    }\n  }, [callback, errors, isSubmitting])\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault()\n    setIsSubmitting(true)\n    setErrors(validate(values))\n  }\n\n  const handleChange = (event) => {\n    event.persist()\n    setValues(values => ({\n      ...values,\n      [event.target.name]: event.target.value\n    }))\n  }\n\n  return {\n    values,\n    handleChange,\n    handleSubmit,\n    errors\n  }\n}\n\nexport default useForm\n","export default function validate(values) {\n  let errors = {}\n\n  if (!values.prodTime) {\n    errors.prodTime = 'Productive time is required'\n  } else if (values.prodTime <= 0) {\n    errors.prodTime = 'Productive time needs to be more than zero'\n  } else if (values.prodTime >= 240) {\n    errors.prodTime = 'Productive time needs to be less than three hours'\n  }\n\n  if (!values.shortBreak) {\n    errors.shortBreak = 'Short break time is required'\n  } else if (values.shortBreak <= 0) {\n    errors.shortBreak = 'Break needs to be more than zero'\n  } else if (values.shortBreak >= 60) {\n    errors.shortBreak = 'Break cannot be more than an hour'\n  }\n\n  if (!values.longBreak) {\n    errors.longBreak = 'Long break time is required'\n  } else if (values.longBreak <= 0) {\n    errors.longBreak = 'Break needs to be more than zero'\n  } else if (values.longBreak >= 60) {\n    errors.shortBreak = 'Break cannot be more than an hour'\n  }\n\n  if (!values.interval) {\n    errors.interval = 'Interval is required'\n  } else if (values.interval <= 0) {\n    errors.interval = 'Interval needs to be greater than zero'\n  } else if (values.interval >= 10) {\n    errors.interval = 'Interval has to be ten or less'\n  }\n\n  return errors\n}\n","import React from 'react'\nimport logo from '../../assets/logo.png'\nimport { Form, Grid, Header, Image, Segment, Button, Popup, Label, Input } from 'semantic-ui-react'\nimport { withRouter, useHistory } from \"react-router-dom\"\nimport useForm from './useForm'\nimport validate from './FormRules'\n\n\nfunction TimeForm() {\n  const history = useHistory()\n  const {\n    values,\n    handleChange,\n    handleSubmit,\n    errors\n  } = useForm(submit, validate)\n\n  function submit() {\n    console.log(values)\n    history.push(`/timer/${values.prodTime}-${values.shortBreak}-${values.longBreak}-${values.interval}`)\n  }\n\n  return(\n    <Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 500 }}>\n        <Header as='h2' textAlign='center' className=\"form\">\n          <Image src={logo}/> How do you want to work?\n        </Header>\n        <Form onSubmit={handleSubmit}>\n          <Segment stacked>\n\n            <Form.Field>\n              <Input\n                fluid\n                icon='time'\n                iconPosition='left'\n                placeholder=\"Productive Time (minutes)\"\n                name='prodTime'\n                value={values.prodTime || ''}\n                onChange={handleChange}\n              />\n              {errors.prodTime && (\n                <Label pointing prompt>{errors.prodTime}</Label>\n              )}\n            </Form.Field>\n\n            <Form.Field>\n              <Input\n                fluid\n                icon='time'\n                type='number'\n                iconPosition='left'\n                name=\"shortBreak\"\n                value={values.shortBreak || ''}\n                onChange={handleChange}\n                placeholder=\"Short Break (minutes)\"\n              />\n              {errors.shortBreak && (\n                <Label pointing prompt>{errors.shortBreak}</Label>\n              )}\n            </Form.Field>\n\n            <Form.Field>\n              <Form.Input\n                fluid\n                icon='time'\n                type='number'\n                iconPosition='left'\n                name=\"longBreak\"\n                value={values.longBreak || ''}\n                onChange={handleChange}\n                placeholder=\"Long Break (minutes)\"\n              />\n              {errors.longBreak && (\n                <Label pointing prompt>{errors.longBreak}</Label>\n              )}\n            </Form.Field>\n\n            <Popup\n              trigger={\n                <Form.Field>\n                  <Input\n                    fluid\n                    icon='redo'\n                    type='number'\n                    iconPosition='left'\n                    name=\"interval\"\n                    value={values.interval || ''}\n                    onChange={handleChange}\n                    placeholder=\"Interval\"\n                  />\n                  {errors.interval && (\n                    <Label pointing prompt>{errors.interval}</Label>\n                  )}\n                </Form.Field>\n              }\n              content=\"Interval will be the amount of times you will have a short break before a long break.\"\n              position=\"right center\"\n            />\n\n            <Button fluid size='large' type='submit' className=\"btn\">\n              Submit\n            </Button>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default withRouter(TimeForm)\n","import React from 'react'\nimport { Grid, Header, Button } from 'semantic-ui-react'\nimport UIfx from 'uifx'\nimport alertAudio from '../assets/alert.mp3'\n\nconst alert = new UIfx(alertAudio);\n\nexport default class Timer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      prod: Number(this.props.match.params.productiveTime),\n      short: Number(this.props.match.params.shortBreak),\n      long: Number(this.props.match.params.longBreak),\n      seconds: 0,\n      session: 'Pomodoro Session',\n      interval: Number(this.props.match.params.interval),\n      isRunning: false\n    }\n\n    this.format = this.format.bind(this)\n    this.startTimer = this.startTimer.bind(this)\n    this.stopTimer = this.stopTimer.bind(this)\n    this.sessionSwitch = this.sessionSwitch.bind(this)\n    this.getSessionMinutes = this.getSessionMinutes.bind(this)\n    this.resetSessionMinutes = this.resetSessionMinutes.bind(this)\n    this.subtractInterval = this.subtractInterval.bind(this)\n    this.intervalText = this.intervalText.bind(this)\n    this.resetTimer = this.resetTimer.bind(this)\n  }\n\n  format(time) {\n    const val = time.toString().length < 2 ? '0' + time.toString() : time\n    return (val)\n  }\n\n  startTimer() {\n    if (this.state.isRunning) return;\n    this.myInterval = setInterval(() => {\n      this.setState({isRunning: true})\n      const { seconds, session } = this.state\n      let minutes = this.getSessionMinutes()\n\n      if (seconds > 0) {\n        this.setState(({ seconds }) => ({\n          seconds: seconds - 1\n        }))\n      }\n      if (seconds === 0) {\n        if (minutes === 0) {\n          this.resetSessionMinutes()\n          this.sessionSwitch()\n          alert.play()\n        } else {\n          if (session === \"Pomodoro Session\") {\n            this.setState({\n              prod: this.state.prod - 1,\n              seconds: 59\n            })\n          }\n          if (session === \"Short Break\") {\n            this.setState({\n              short: this.state.short - 1,\n              seconds: 59\n            })\n          }\n          if (session === \"Long Break\") {\n            this.setState({\n              long: this.state.long - 1,\n              seconds: 59\n            })\n          }\n        }\n      }\n    }, 1000)\n  }\n\nstopTimer() {\n  if (!this.state.isRunning) return\n  this.setState({isRunning: false})\n  clearInterval(this.myInterval)\n}\n\nresetTimer() {\n  this.stopTimer()\n  this.resetSessionMinutes()\n  this.setState({\n    session: \"Pomodoro Session\",\n    seconds: 0\n  })\n}\n\ngetSessionMinutes() {\n  const { session, prod, long, short } = this.state\n  if (session === \"Pomodoro Session\") {\n    return prod\n  }\n  if (session === \"Short Break\") {\n    return short\n  }\n  if (session === \"Long Break\") {\n    return long\n  }\n}\n\nresetSessionMinutes() {\n  const { session } = this.state\n\n  if (session === \"Pomodoro Session\") {\n    this.setState({prod: Number(this.props.match.params.productiveTime)})\n  }\n  if (session === \"Short Break\") {\n    this.setState({short: Number(this.props.match.params.shortBreak)})\n  }\n  if (session === \"Long Break\") {\n    this.setState({long: Number(this.props.match.params.longBreak)})\n  }\n}\n\n  sessionSwitch() {\n    const { session, interval } = this.state\n    if (session === \"Pomodoro Session\" && interval > 0) {\n      this.setState({ session: \"Short Break\"})\n    }\n    if (session === \"Pomodoro Session\" && interval === 0) {\n      this.setState({\n        interval: 4,\n        session: \"Long Break\"\n      })\n    }\n    if (session === \"Short Break\") {\n      this.setState({ session: \"Pomodoro Session\"})\n      this.subtractInterval()\n    }\n    if (session === \"Long Break\") {\n      this.setState({ session: \"Pomodoro Session\" })\n    }\n  }\n\n  subtractInterval() {\n    if (this.state.interval > 0) {\n      this.setState({interval: this.state.interval - 1})\n    }\n    else {\n      this.setState({interval: Number(this.props.match.params.interval)})\n    }\n  }\n\n  intervalText() {\n    if (this.state.interval === 1) {\n      return(\n        <p>You have {this.state.interval} short break before a long break</p>\n      )\n    } else {\n      return(\n        <p>You have {this.state.interval} short breaks before a long break</p>\n      )\n    }\n  }\n\n\n  render() {\n    return(\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 600 }} className='container'>\n        <Header as='h1' textAlign='center' className='timer-header'>\n          {this.state.session}\n        </Header>\n\n        {this.intervalText()}\n\n        <p className=\"minutes\">{this.getSessionMinutes()}:</p>\n        <p className=\"seconds\">{this.format(this.state.seconds)}</p>\n\n        <Button.Group size='large'>\n          <Button onClick={this.startTimer}>Start</Button>\n          <Button onClick={this.stopTimer}>Stop</Button>\n          <Button onClick={this.resetTimer}>Reset</Button>\n        </Button.Group>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/main.css'\nimport 'semantic-ui-css/semantic.min.css'\n\n// Components\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport TimeForm from './Form/TimeForm'\nimport Timer from './Timer'\n\nexport default function App() {\n  return(\n    <HashRouter basename='/'>\n        <Switch>\n          <Route exact path=\"/\" component={TimeForm}/>\n          <Route\n            path=\"/timer/:productiveTime-:shortBreak-:longBreak-:interval\"\n            component={Timer}\n            />\n        </Switch>\n    </HashRouter>\n  )\n}\n"],"sourceRoot":""}